// HAZI TECH
// Programmed by Hasitha Jayasundara
// Visit my YouTube Channel for more info - http://www.youtube.com/c/HAZITECH?sub_confirmation=1

//#include <avr/pgmspace.h>  // Needed to store stuff in Flash using PROGMEM
//#include <pgmspace.h>
#include "Arduino.h"
#include <FastLED.h>
#include <EEPROM.h>

#define LED_PIN 7 //LED Strip Signal Connection 
#define ParkSignal 3 //Park Signal Connection
#define BrakeSignal 5 //Brake Signal Connection
#define LeftSignal 7 //Left Blinker Signal Connection
#define RightSignal 9 //Right Blinker Signal Connection
#define ReverseSignal 11 //Reverse Signal Connection
#define ModeButton 12       // Mode Select Button
#define ModeLED 10          // Mode LED

#define NUM_LEDS 64 //Total no of LEDs in the LED strip
#define BRIGHTNESS 50  

int BlinkerSpeed = 75; //Turn Signal Off time. Adjust this to match with your vehicle turn signal speed.
int HazardSpeed = 100;
int VIPSpeed = 50;
int KITTSpeed = 75;

int StartupSpeed = 100;
int ParkDetect = 0;
int mode = 1;
int pres = 0;

CRGB leds[NUM_LEDS];

// Create the array of retro arcade characters and store it in Flash memory
const long ParkAnimation_Frame1[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame2[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x4b0000, 0x000000, 0x000000, 0x4b0000, 0x000000, 0x000000,
0x000000, 0x000000, 0x4b0000, 0x000000, 0x000000, 0x4b0000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame3[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 
0x000000, 0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 0x000000, 
0x000000, 0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 0x000000,
0x000000, 0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 0x000000, 
0x000000, 0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 0x000000, 
0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame4[] PROGMEM =
{
0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 0x000000,  
0x000000, 0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 0x000000,
0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000,
0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000,
0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000,
0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 
0x000000, 0x4b0000, 0x000000, 0x000000, 0x000000, 0x000000, 0x4b0000, 0x000000,
0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame5[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xff0000, 0xff0000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000,
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xff0000, 0xff0000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame6[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000,
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame7[] PROGMEM =
{
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000,  
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000,
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
};

const long ParkAnimation_Frame8[] PROGMEM =
{
0x000000, 0x000000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0x000000, 0x000000, 
0x000000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0x000000, 
0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 
0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 
0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000,  
0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 
0x000000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0x000000,
0x000000, 0x000000, 0xc80000, 0xc80000, 0xc80000, 0xc80000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame9[] PROGMEM =
{
0x000000, 0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, 0x000000, 
0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, 
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000,  
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 
0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000,
0x000000, 0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, 0x000000,
};

const long ParkAnimation_Frame10[] PROGMEM =
{
0x000000, 0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, 0x000000, 
0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, 
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000,  
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 
0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000,
0x000000, 0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, 0x000000,
};

const long LeftArrow_Frame1[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
};

const long LeftArrow_Frame2[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
};

const long LeftArrow_Frame3[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000,
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,  
};

const long LeftArrow_Frame4[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,  
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
};

const long LeftArrow_Frame5[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
};

const long LeftArrow_Frame6[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
};

const long LeftArrow_Frame7[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
};

const long LeftArrow_Frame8[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
};

const long RightArrow_Frame1[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,  
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
};

const long RightArrow_Frame2[] PROGMEM =
{
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
};

const long RightArrow_Frame3[] PROGMEM =
{
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
};

const long RightArrow_Frame4[] PROGMEM =
{
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,  
};

const long RightArrow_Frame5[] PROGMEM =
{
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
};

const long RightArrow_Frame6[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long RightArrow_Frame7[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long RightArrow_Frame8[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,  
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0xffa500, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0xffa500, 
0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 0x000000, 0xffa500, 0xffa500, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
};

const long Hazard_Frame1[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long Hazard_Frame2[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0xffa500, 0xffa500, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long Hazard_Frame3[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long Hazard_Frame4[] PROGMEM =
{
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 
0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 
0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 
0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500,  
0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 
0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000,
0x000000, 0x000000, 0xffa500, 0xffa500, 0xffa500, 0xffa500, 0x000000, 0x000000,
};


const long Brake[] PROGMEM =
{
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000,  
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000,  
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000,  
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
};

const long Park[] PROGMEM =
{
0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 
0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000,  
0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 
0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000,  
0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 
0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000,  
0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 
0x000000, 0x000000, 0x4b0000, 0x4b0000, 0x4b0000, 0x4b0000, 0x000000, 0x000000, 
};

const long ReverseLight[] PROGMEM =
{
0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 
0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000,  
0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 
0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff,  
0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff,  
0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 
0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000,
0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000,
};

const long Blank[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000,
};

const long VIP_Red[] PROGMEM =
{
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000,  
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000,  
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000,  
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, 
};

const long VIP_Blue[] PROGMEM =
{
0x000000, 0x000000, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x000000, 0x000000, 
0x000000, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x000000,  
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,  
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,  
0x000000, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x000000, 
0x000000, 0x000000, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x000000, 0x000000, 
};

const long KnightRider_Frame1[] PROGMEM =
{
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, //7
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //6
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, //3
0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, //2
0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, //1
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame2[] PROGMEM =
{
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, //6
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //7
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, //3
0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, //2
0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, //1
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame3[] PROGMEM =
{
0x000000, 0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, 0x000000, //5
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //6
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, //2
0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, //1
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame4[] PROGMEM =
{
0x000000, 0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, 0x000000, //4
0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, //5
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame5[] PROGMEM =
{
0x000000, 0x000000, 0x320000, 0x320000, 0x320000, 0x320000, 0x000000, 0x000000, //3
0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, //4
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame6[] PROGMEM =
{
0x000000, 0x000000, 0x140000, 0x140000, 0x140000, 0x140000, 0x000000, 0x000000, //2
0x000000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x000000, //3
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame7[] PROGMEM =
{
0x000000, 0x000000, 0x050000, 0x050000, 0x050000, 0x050000, 0x000000, 0x000000, //1
0x000000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x000000, //2
0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, //3
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //7
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
};

const long KnightRider_Frame8[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x000000, //1
0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, //2
0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, //3
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //6
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, //7
};

const long KnightRider_Frame9[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, //1
0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, //2
0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, //3
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //7
0x000000, 0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, 0x000000, //6
};

const long KnightRider_Frame10[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, 0x050000, //1
0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, //2
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0x000000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0x000000, //6
0x000000, 0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, 0x000000, //5
};

const long KnightRider_Frame11[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0x000000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x000000, //5
0x000000, 0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, 0x000000, //4
};

const long KnightRider_Frame12[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0x000000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x000000, //4
0x000000, 0x000000, 0x320000, 0x320000, 0x320000, 0x320000, 0x000000, 0x000000, //3
};

const long KnightRider_Frame13[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x000000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x000000, //3
0x000000, 0x000000, 0x140000, 0x140000, 0x140000, 0x140000, 0x000000, 0x000000, //2
};

const long KnightRider_Frame14[] PROGMEM =
{
0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, //0
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //7
0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, //6
0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, 0x960000, //5
0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, 0x640000, //4
0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, 0x320000, //3
0x000000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x140000, 0x000000, //2
0x000000, 0x000000, 0x050000, 0x050000, 0x050000, 0x050000, 0x000000, 0x000000, //1
};


void setup() 
{
//EEPROM.update(1,1);       // *IMPORTANT* - Run this code line ONLY for the 1st time. Then comment it and re-upload the code                       
mode = EEPROM.read(1);
FastLED.addLeds<WS2812, LED_PIN, GRB>(leds, NUM_LEDS);
FastLED.setBrightness(BRIGHTNESS);
pinMode(ParkSignal, INPUT);
pinMode(BrakeSignal, INPUT);
pinMode(LeftSignal, INPUT);
pinMode(RightSignal, INPUT);
pinMode(ReverseSignal, INPUT);
pinMode(ModeLED, OUTPUT);
pinMode(ModeButton, INPUT);
}


void loop() 
{
  RightBlinker();
ButtonScan();

switch (mode) {
case 1:
digitalWrite(ModeLED, LOW);
if(digitalRead(ReverseSignal)==1)
{
if(digitalRead(BrakeSignal)==0) //Reverse Light
{   
Reverse();
}

if(digitalRead(BrakeSignal)==1) //Brake Light
{   
BrakeFull();
}
}

if(ParkDetect == 0)
{
if(digitalRead(ParkSignal)==1) 
{
ParkDetect = 1;
}
}

if(ParkDetect == 2)
{
if(digitalRead(ParkSignal)==0) 
{
ParkDetect = 3;
}
}

if(ParkDetect == 1)
{
ParkON();
ParkDetect = 2;  
}

if(ParkDetect == 3)
{
ParkOFF();
ParkDetect = 0;  
}


if(digitalRead(ParkSignal)==0)
{
if(digitalRead(ReverseSignal)==0)
{
if((digitalRead(BrakeSignal)==0)&&(digitalRead(LeftSignal)==0)&&(digitalRead(RightSignal)==0)) //No Signal
{
AllOff();
}

if((digitalRead(BrakeSignal)==1)&&(digitalRead(LeftSignal)==0)&&(digitalRead(RightSignal)==0)) //Brake Light
{
BrakeFull();
}
    
if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==0)&&(digitalRead(BrakeSignal)==0)) //Left Blinker
{
AllOff();
LeftBlinker();
}

if((digitalRead(RightSignal)==1)&&(digitalRead(LeftSignal)==0)&&(digitalRead(BrakeSignal)==0)) //Right Blinker
{
AllOff();
RightBlinker();
}

if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==0)&&(digitalRead(BrakeSignal)==1)) //Left Blinker & Brake
{
BrakeFull();
}

if((digitalRead(RightSignal)==1)&&(digitalRead(LeftSignal)==0)&&(digitalRead(BrakeSignal)==1)) //Right Blinker & Brake
{
BrakeFull();
}

if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==1)&&(digitalRead(BrakeSignal)==0)) //Dual Blinker / Hazard
{
AllOff();
DualBlinker();
}

if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==1)&&(digitalRead(BrakeSignal)==1)) //Dual Blinker / Hazard + Brake
{
BrakeFull();
}
}
}


if(ParkDetect == 2)
{
if(digitalRead(ReverseSignal)==0)
{
if((digitalRead(LeftSignal)==0)&&(digitalRead(RightSignal)==0)&&(digitalRead(BrakeSignal)==0)) //Park Light
{   
ParkFull();
}

if((digitalRead(BrakeSignal)==1)&&(digitalRead(LeftSignal)==0)&&(digitalRead(RightSignal)==0)) //Brake Light
{
BrakeFull();
}
    
if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==0)&&(digitalRead(BrakeSignal)==0)) //Left Blinker
{
LeftBlinker();
}

if((digitalRead(RightSignal)==1)&&(digitalRead(LeftSignal)==0)&&(digitalRead(BrakeSignal)==0)) //Right Blinker
{
RightBlinker();
}

if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==0)&&(digitalRead(BrakeSignal)==1)) //Left Blinker & Brake
{
BrakeFull();
}

if((digitalRead(RightSignal)==1)&&(digitalRead(LeftSignal)==0)&&(digitalRead(BrakeSignal)==1)) //Right Blinker & Brake
{
BrakeFull();
}

if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==1)&&(digitalRead(BrakeSignal)==0)) //Dual Blinker / Hazard
{
AllOff();
DualBlinker();
}

if((digitalRead(LeftSignal)==1)&&(digitalRead(RightSignal)==1)&&(digitalRead(BrakeSignal)==1)) //Dual Blinker / Hazard + Brake
{
BrakeFull();
}
}
}
break;


case 2:
VIP();
break;

case 3:
KnightRider();
break;
}
}


void VIP()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(VIP_Red[i]));  // Read array from Flash
  }
FastLED.show(); 
digitalWrite(ModeLED, HIGH);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, LOW);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(VIP_Red[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, HIGH);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, LOW);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(VIP_Red[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, HIGH);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, LOW);
delay(VIPSpeed); ButtonScan();
delay(VIPSpeed); ButtonScan();
delay(VIPSpeed); ButtonScan();


FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(VIP_Blue[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, HIGH);
delay(VIPSpeed); ButtonScan();  

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, LOW);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(VIP_Blue[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, HIGH);
delay(VIPSpeed); ButtonScan();  

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, LOW);
delay(VIPSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(VIP_Blue[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, HIGH);
delay(VIPSpeed); ButtonScan();  

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
digitalWrite(ModeLED, LOW);
delay(VIPSpeed); ButtonScan();
delay(VIPSpeed); ButtonScan();
delay(VIPSpeed); ButtonScan();
}


void KnightRider()
{
digitalWrite(ModeLED, HIGH);
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame4[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame5[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame6[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame7[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame8[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame9[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame10[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame11[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame12[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame13[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(KnightRider_Frame14[i]));  // Read array from Flash
  }
FastLED.show();
delay(KITTSpeed); ButtonScan();
}


void AllOff()
{
  for (int i = 0; i < NUM_LEDS; i++)
  {
    leds[i] = CRGB(0, 0, 0);
  }
    FastLED.show();  
}


void Reverse()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ReverseLight[i]));  // Read array from Flash
  }
FastLED.show(); 
}

void BrakeFull()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Brake[i]));  // Read array from Flash
  }
FastLED.show();
}

void ParkFull()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Park[i]));  // Read array from Flash
  }
FastLED.show();

}

void LeftBlinker()
{
    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame1[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame2[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame3[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame4[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame5[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame6[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame7[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(LeftArrow_Frame8[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);

    FastLED.clear();
    for(int i = 0; i < NUM_LEDS; i++) 
    {
        leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
    }
    FastLED.show();
    delay(BlinkerSpeed);
}

void RightBlinker()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame4[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame5[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame6[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame7[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(RightArrow_Frame8[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
delay(BlinkerSpeed);
}

void DualBlinker()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Hazard_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(HazardSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Hazard_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(HazardSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Hazard_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(HazardSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Hazard_Frame4[i]));  // Read array from Flash
  }
FastLED.show();
delay(HazardSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
delay(HazardSpeed);
}


void ParkON()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame4[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame5[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame6[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame7[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame8[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame9[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame10[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Park[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);
}


void ParkOFF()
{
FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame10[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame9[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame8[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame7[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame6[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame5[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame4[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame3[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame2[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(ParkAnimation_Frame1[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);

FastLED.clear();
for(int i = 0; i < NUM_LEDS; i++) 
  {
  leds[i] = pgm_read_dword(&(Blank[i]));  // Read array from Flash
  }
FastLED.show();
delay(StartupSpeed);
}

void ButtonScan()
{
if(digitalRead(ModeButton)==1)
   {
    if(pres==0)
   {
    mode++;
    EEPROM.write(1,mode); 
    pres=1;
   }
    }
  else
  {
    pres=0;
   }  

 if(mode == 4)
 {
 mode = 1;
 }
}

// HAZI TECH
// Programmed by Hasitha Jayasundara
// Visit my YouTube Channel for more info - http://www.youtube.com/c/HAZITECH?sub_confirmation=1
